from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, PageBreak
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.rl_config import defaultPageSize
from reportlab.lib.units import inch
from reportlab.platypus import KeepTogether
from reportlab.platypus.tables import Table, TableStyle
from reportlab.lib import colors
from reportlab.pdfgen import canvas
from reportlab.platypus import Image
cm = 2.54
import copy

import time
from reportlab.lib.enums import TA_JUSTIFY
from reportlab.lib.pagesizes import letter
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle





PAGE_HEIGHT=defaultPageSize[1]; PAGE_WIDTH=defaultPageSize[0]
styles = getSampleStyleSheet()

Title = ""
pageinfo = "test generated by TEST GENERATOR"
#def myFirstPage(canvas, doc):
#	canvas.saveState()
#	canvas.setFont('Times-Bold',13)
#	canvas.drawCentredString(PAGE_WIDTH/2.0, PAGE_HEIGHT-48, Title)
#	canvas.setFont('Times-Roman',12)
#	canvas.drawCentredString(PAGE_WIDTH/4.0, PAGE_HEIGHT-78,  'Name..............................')
#	canvas.drawCentredString(PAGE_WIDTH/4.0, PAGE_HEIGHT-118, 'Date..............................')
#	canvas.drawCentredString(PAGE_WIDTH/4.0, PAGE_HEIGHT-158, 'Index number......................')
#	canvas.setFont('Times-Roman',10)
#	canvas.drawString(inch, 0.75 * inch, "First Page / %s" % pageinfo)
#	canvas.restoreState()

def myLaterPages(canvas, doc):
	canvas.saveState()
	canvas.setFont('Times-Roman',10)
	canvas.drawString(inch, 0.75 * inch, "Page %d %s" % (doc.page, pageinfo))
	canvas.restoreState()

def go0(tests,filename,title): #odpowiedzi

	

	#SETUP
	filename = filename+'_answersO.pdf'
	#print("abcd")
	#print(len(tests))
	questions = list()
	answers = list()
	key = list()
	images = list()
	for i in range (0,len(tests)):
		questions.append(tests[i][0])
		answers.append(tests[i][1])
		key.append(tests[i][2])



	#CREATE DOCUMENT
	doc = SimpleDocTemplate(filename,pagesize=letter,
                        rightMargin=72,leftMargin=72,
                        topMargin=72,bottomMargin=18)
	#doc = canvas.Canvas(filename)
	Story = []
	style = styles["Normal"]

	formatted_time = time.ctime()
	styles.add(ParagraphStyle(name='Justify', alignment=TA_JUSTIFY))
	ptext = '<font size=12>%s</font>' % formatted_time
 
	Story.append(Paragraph(ptext, styles['Normal']))
	Story.append(Spacer(1, 12))
	Story.append(Paragraph("Test from Software Engineering", styles['Normal']))
	Story.append(Spacer(1, 12))




	#CREATE TABLES WITH CORRECT ANSWERS AT FIRST PAGE
	for i in range(0,len(key)):
		data = list()
		tempList = list()
		tempList.append('')
		for j in range(0,len(key[i])):
			tempList.append(j+1);
		data.append(tempList)
		tempList = list()
		tempList.append('a)')
		for j in range(0,len(key[i])):
			if key[i][j]==0:
				tempList.append('O')
			else:
				tempList.append('')
		data.append(tempList)
		tempList = list()
		tempList.append('b)')
		for j in range(0,len(key[i])):
			if key[i][j]==1:
				tempList.append('O')
			else:
				tempList.append('')
		data.append(tempList)
		tempList = list()
		tempList.append('c)')
		for j in range(0,len(key[i])):
			if key[i][j]==2:
				tempList.append('O')
			else:
				tempList.append('')
		data.append(tempList)
		tempList = list()
		tempList.append('d)')
		for j in range(0,len(key[i])):
			if key[i][j]==3:
				tempList.append('O')
			else:
				tempList.append('')
		data.append(tempList)

		t=Table(data,(len(key[0])+1)*[0.3*inch], 5*[0.3*inch])
		t.setStyle(TableStyle([
					   ('ALIGN',(0,0),(-1,-1),'CENTER'),
                       ('INNERGRID', (1,1), (-1,-1), 0.25, colors.black),
                       ('BOX', (0,0), (-1,-1), 0.25, colors.black),
                       ]))
		Story.append(KeepTogether([Paragraph('Group '+str(i+1) +':' + "<br/>",style), t, Paragraph("<br/>"+"<br/>",style)]))
	
	#print(doc.page)

	doc.build(Story, onFirstPage=myLaterPages, onLaterPages=myLaterPages)


def go(tests,filename,title): #odpowiedzi

	

	#SETUP
	filename = filename+'_answersX.pdf'
	#print("abcd")
	#print(len(tests))
	questions = list()
	answers = list()
	key = list()
	images = list()
	for i in range (0,len(tests)):
		questions.append(tests[i][0])
		answers.append(tests[i][1])
		key.append(tests[i][2])



	#CREATE DOCUMENT
	doc = SimpleDocTemplate(filename,pagesize=letter,
                        rightMargin=72,leftMargin=72,
                        topMargin=72,bottomMargin=18)
	#doc = canvas.Canvas(filename)
	Story = []
	style = styles["Normal"]

	formatted_time = time.ctime()
	#styles.add(ParagraphStyle(name='Justify', alignment=TA_JUSTIFY))
	ptext = '<font size=12>%s</font>' % formatted_time
 
	Story.append(Paragraph(ptext, styles['Normal']))
	Story.append(Spacer(1, 12))
	Story.append(Paragraph("Test from Software Engineering", styles['Normal']))
	Story.append(Spacer(1, 12))



	#CREATE TABLES WITH CORRECT ANSWERS AT FIRST PAGE
	for i in range(0,len(key)):
		data = list()
		tempList = list()
		tempList.append('')
		for j in range(0,len(key[i])):
			tempList.append(j+1);
		data.append(tempList)
		tempList = list()
		tempList.append('a)')
		for j in range(0,len(key[i])):
			if key[i][j]==0:
				tempList.append('X')
			else:
				tempList.append('')
		data.append(tempList)
		tempList = list()
		tempList.append('b)')
		for j in range(0,len(key[i])):
			if key[i][j]==1:
				tempList.append('X')
			else:
				tempList.append('')
		data.append(tempList)
		tempList = list()
		tempList.append('c)')
		for j in range(0,len(key[i])):
			if key[i][j]==2:
				tempList.append('X')
			else:
				tempList.append('')
		data.append(tempList)
		tempList = list()
		tempList.append('d)')
		for j in range(0,len(key[i])):
			if key[i][j]==3:
				tempList.append('X')
			else:
				tempList.append('')
		data.append(tempList)

		t=Table(data,(len(key[0])+1)*[0.3*inch], 5*[0.3*inch])
		t.setStyle(TableStyle([
					   ('ALIGN',(0,0),(-1,-1),'CENTER'),
                       ('INNERGRID', (1,1), (-1,-1), 0.25, colors.black),
                       ('BOX', (0,0), (-1,-1), 0.25, colors.black),
                       ]))
		Story.append(KeepTogether([Paragraph('Group '+str(i+1) +':' + "<br/>",style), t, Paragraph("<br/>"+"<br/>",style)]))
	
	#print(doc.page)

	doc.build(Story)#, onFirstPage=myLaterPages, onLaterPages=myLaterPages)


def go2(tests,filename,title,groupNumber,date,description):


	#date = '27.06.2017'
	#description = 'For writing this test you have 60 minutes. Please put all your answers into answer card, by marking proper field with "X"'

	#SETUP
	filename = filename+str(groupNumber+1)+'.pdf'
	#print("abcd")
	#print(len(tests))
	questions = list()
	answers = list()
	key = list()
	images = list()
	for i in range (0,len(tests)):
		questions.append(tests[i][0])
		answers.append(tests[i][1])
		key.append(tests[i][2])
		images.append(tests[i][3])

	#print (images)
	
	#CREATE DOCUMENT

	doc = SimpleDocTemplate(filename,pagesize=letter,
                        rightMargin=72,leftMargin=72,
                        topMargin=72,bottomMargin=18)
	#doc = canvas.Canvas(filename)
	Story = []
	style = styles["Normal"]

	formatted_time = time.ctime()
	#styles.add(ParagraphStyle(name='Justify', alignment=TA_JUSTIFY))
	#ptext = '<font size=12>%s</font>' % formatted_time
 
	ptext = date
	Story.append(Paragraph(ptext, styles['Normal']))
	Story.append(Spacer(1, 12))
	ptext = 'Name...............................................................Index nr.................'
	Story.append(Paragraph(ptext, styles['Normal']))
	Story.append(Spacer(1, 12))
	ptext = title
	Story.append(Paragraph(ptext, styles['Normal']))
	Story.append(Spacer(2, 12))

	ptext = description
	Story.append(Paragraph(ptext, styles['Normal']))
	Story.append(Spacer(1, 12))


	#doc = SimpleDocTemplate(filename)
	#doc = canvas.Canvas(filename)
	#Story = [Spacer(1,2*inch)]
	#style = styles["Normal"]
	styless = list()
	styless.append(style)

	#logo = "images.png" 
	#im = Image(logo, 2*inch, 2*inch)
	#Story.append(im)

	#CREATE ANSWERS - unneded
	ans = "";
#	for i in range(0,len(key)):
#		ans = 'test '+str(i+1)+"  "
#		for j in range(0,len(key[i])):
#			ans += str(j+1)+':'+str(key[i][j]+1)+"\t"
#		p = Paragraph(ans, style)
#		Story.append(p)
	#Story.append(PageBreak())


	#create tests:
	for i in range(groupNumber, groupNumber+1):
		name = "<br/>" + "Group: "+str(i+1) + "<br/>" + "<br/>" 
		Story.append(Paragraph(name,style))
		
		#create answeer sheet:
		data = list()
		tempList = list()
		tempList.append('')
		for j in range(0,len(key[i])):
			tempList.append(j+1);
		tempList.append('')
		data.append(tempList)
		tempList = list()
		tempList.append('a)')
		for j in range(0,len(key[i])+1):
			tempList.append('')
		data.append(tempList)
		tempList = list()
		tempList.append('b)')
		for j in range(0,len(key[i])+1):
			tempList.append('')
		data.append(tempList)
		tempList = list()
		tempList.append('c)')
		for j in range(0,len(key[i])+1):
			tempList.append('')
		data.append(tempList)
		tempList = list()
		tempList.append('d)')
		for j in range(0,len(key[i])+1):
			tempList.append('')
		data.append(tempList)
		tempList = list()
		for j in range(0,len(key[i])+1):
			tempList.append('')
		tempList.append('sum:')
		data.append(tempList)


		t=Table(data,(len(key[0])+2)*[0.3*inch], 6*[0.3*inch])
		t.setStyle(TableStyle([
					   ('ALIGN',(0,0),(-1,-1),'CENTER'),
                       ('INNERGRID', (1,1), (-2,-1), 0.25, colors.black),
                       ('BOX', (1,1), (-2,-2), 0.25, colors.black),
                       ]))
		Story.append(KeepTogether([Paragraph('Put your answers here:' + "<br/>",style), t, Paragraph("<br/>"+"<br/>"+"<br/>",style)]))
	

		#CREATE TESTS
		#print(questions[i])
		for j in range (0, len(questions[i])):
			p = list()

			#nadaj wielkość
			num = questions[i][j].find('height="')
			temp = ''
			
			if num == -1:
				styless.append(copy.deepcopy(styles['Normal']))
			else:
				num+=8
				while questions[i][j][num] is not '"':
					temp+=questions[i][j][num]
					num +=1
				
				num = int(temp)
				#print("poprawny num")
				#print(num)

				styless.append( copy.deepcopy(styles['Normal']) )
				styless[len(styless)-1].leading = num
				przerwa=''
				#for uu in range (0,int(num/50)):
				przerwa+= "<br/>" + "<br/>"
				#p.append(Paragraph(przerwa,styless[len(styless)-1]))
				p.append(Paragraph(przerwa,style))

			

			p.append(Paragraph(str(j+1)+". "+questions[i][j],styless[len(styless)-1]))
			

			for g in range (0,len(images[i])):
				if j is images[i][g][0]:
					logo = images[i][g][1]
					im = Image(logo)
					p.append(im)
			
			ansSize=list()
			for k in range (0,len(answers[i][j])):
				num = answers[i][j][k].find('height="')
				temp = ''
				if num == -1:
					continue
				else:
					num+=8
					while answers[i][j][k][num] is not '"':
						temp+=answers[i][j][k][num]
						num +=1
					ansSize.append(int(temp))

			styless.append( copy.deepcopy(styles['Normal']) )
			if ansSize:
				styless[len(styless)-1].leading = max(ansSize)
					#przerwa=''
					#for uu in range (0,int(num/50)):
					#	przerwa+= "<br/>"
					#p.append(Paragraph(przerwa,styless[len(styless)-1]))
	#		p.append(Paragraph(przerwa,style))


			for k in range(0,len(answers[i][j])):

				num = answers[i][j][k].find('height="')
				temp = ''
				
				if num != -1:
					num+=8
					while answers[i][j][k][num] is not '"':
						temp+=answers[i][j][k][num]
						num +=1
					num = int(temp)

					styless.append( copy.deepcopy(styles['Normal']) )
					styless[len(styless)-1].leading = num #+ styless[len(styless)-2].leading 
				else:
					styless.append( copy.deepcopy(styles['Normal']) )

				an = '(' + str(chr(96+k+1))+')  '+ answers[i][j][k] 
				p.append(Paragraph(an,styless[len(styless)-1]))
			if j < len(questions[i])-1:
				an = "<br/>" + "<br/>"
				p.append(Paragraph(an,style))
			Story.append(KeepTogether(p))
		Story.append(PageBreak())



		#bogustext = ("This is Paragraph number %s. " % i) *20
		#p = Paragraph(bogustext, style)
		#Story.append(p)
		#Story.append(PageBreak())
		#canvas.showPage()
		#Story.append(Spacer(1,0.2*inch))
	doc.build(Story)#, onFirstPage=myFirstPage, onLaterPages=myLaterPages)

